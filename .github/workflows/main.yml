name: Publish new package with the latest PSL

on:
  push:
    tags:
    - "v*" # kickstart manual release cycle
  #schedule:
  #  - cron: "35 1 * * *"


jobs:
  publish-package-with-psl:
    runs-on: ubuntu-latest
    steps:

    # checkout main temporary, then create local publish branch and update it.
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Update local publish branch
      run: |
        git config user.name "ko-zu (github-actions)"
        git config user.email "causeless@gmail.com"

        # parse version from main repo
        BASEVERSION=$(sed -nr 's/^__version__ = "([0-9\.]+)"$/\1/p' setup.py)

        # create working publish branch
        git fetch origin publish
        git checkout origin/publish -b publish
    
    - name: Sync with main on new release
      if: ${{ github.event_name != 'schedule' }}
      run: |
        git fetch origin main
        git merge -X theirs --allow-unrelated-histories \
          origin/main -m "Automated merge: sync with 'origin/main' v${BASEVERSION}"

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine requests

    - name: Commit and push the change
      run: |
        pip install .
        python -m publicsuffixlist.update

        # replace the version
        VERSION=$(sed -nr 's/^__version__ = "([0-9\.]+)"$/\1/p' setup.py)
        NEWDATE=$(date -u "+%Y%m%d")
        sed -ri 's/^(__version__ = "[0-9\\.]+).[0-9]+"$/\1.'${NEWDATE}'"/' setup.py
        NEWVERSION=$(sed -nr 's/^__version__ = "([0-9\.]+)"$/\1/p' setup.py)
        NEWTAG=gha${NEWVERSION}

        # break if there is no change in the list, or not a manual release request
        echo ${VERSION} | grep -qE "\.0$" || \
          ! git diff --exit-code --quiet publicsuffixlist/public_suffix_list.dat || \
          exit 1

        pip install .
        python setup.py sdist --formats=gztar
        python setup.py bdist_wheel --universal
        python -m publicsuffixlist.test
        
        git add setup.py publicsuffixlist/public_suffix_list.dat
        git commit -m "Automated release: ${NEWTAG}"
        git push origin publish
        git tag ${NEWTAG}
        git push origin ${NEWTAG}
    
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

